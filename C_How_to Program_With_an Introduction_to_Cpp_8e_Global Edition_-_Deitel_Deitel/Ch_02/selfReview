1. a) main
   b) {, }
   c) ;
   d) printf()
   e) newline,
   f) scanf()
   g) %d
   h) destructive
   i) non-destructive
   j) if()

2. a) false. printf() does not instruct the compiler to include a newline
   b) false. Comments are used to document programs, and are not displayed
   c) true
   d) true
   e) true
   f) true
   g) true
   h) false. An ampersand (&) is only required in a scanf() function
   i) true
   j) false. *, / and % have the same leve, one level higher than + and -
   k) false. You can include newline characters in a single printf statement w      hich will print three lines of output

3. a) int c, thisVariable, q76354, number;
   b) printf( "%s", "Enter an integer: ");
   c) scanf( "%d", &a);
   d) if ( num != 7 ) {
         printf( "%s", "The variable is not equal to 7.");
      }
   e) printf( "%s", "This is a C program." );
   f) printf( "%s", "This is a C \nprogram." );
   g) printf( "%s", "This\nis\na\nC\nprogram." );
   h) printf( "%s", "This\tis\ta\tC\tprogram." );

4. a) //This program will calculate the product of three integers.
   b) printf( "%s", "Enter three integers: " );
   c) int x, y, z;
   d) scanf( "%d %d %d", &x, &y, &z );
   e) int result;
      result = x * y * z;
   f) printf( "The product is %d", result );

5. See program SRE_4.c

6. a) There shouldn't be an ampersand in the argument for the function
   b) There is an ampersand missing in the second argument for the function
   c) There is a semi colon after the conditional statement in the function
   d) The greater than or equal symbol should be >=, not =>